# Generated by Django 3.1.7 on 2023-01-23 06:12

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_resized.forms
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Blogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', tinymce.models.HTMLField()),
                ('content', tinymce.models.HTMLField()),
                ('desc', models.TextField(default='')),
                ('city', models.CharField(choices=[('1', 'birmingham'), ('2', '\tbolton'), ('3', 'leeds'), ('4', 'manchester'), ('5', 'liverpool'), ('6', 'london'), ('7', 'sheffield'), ('8', 'bradford'), ('9', 'preston'), ('10', 'nottingham')], max_length=20)),
                ('image_1', models.FileField(upload_to='media/blogs')),
                ('image_2', models.FileField(upload_to='media/blogs')),
                ('pub_date', models.DateField(default=datetime.datetime(2023, 1, 23, 11, 42, 8, 116922))),
            ],
        ),
        migrations.CreateModel(
            name='ConstructionUpdates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('desc', models.TextField(blank=True, default=' ')),
                ('pub_date', models.DateField(default=datetime.datetime(2023, 1, 23, 11, 42, 8, 110927))),
            ],
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(default=0, verbose_name='Value')),
                ('is_percentage', models.BooleanField(default=False, verbose_name='Is percentage?')),
            ],
            options={
                'verbose_name': 'Discount',
                'verbose_name_plural': 'Discounts',
            },
        ),
        migrations.CreateModel(
            name='DownloadableAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=-1, scale=None, size=[300, 180], upload_to='media/download_assets')),
                ('desc', models.TextField(blank=True, default=' ')),
                ('downloadable_url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='FeatureMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='FurnitureMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('furniture_counts', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Properties',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_underconstruction', models.BooleanField(default=False)),
                ('is_exclusive', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=30)),
                ('type', models.CharField(choices=[('1', 'studio'), ('2', 'apartment')], max_length=10)),
                ('price', models.IntegerField(default=0)),
                ('yields', models.CharField(blank=True, max_length=40)),
                ('area', models.CharField(blank=True, max_length=40)),
                ('deposited_price', models.IntegerField(blank=True, null=True)),
                ('adddress', models.CharField(max_length=50)),
                ('city', models.CharField(choices=[('1', 'birmingham'), ('2', '\tbolton'), ('3', 'leeds'), ('4', 'manchester'), ('5', 'liverpool'), ('6', 'london'), ('7', 'sheffield'), ('8', 'bradford'), ('9', 'preston'), ('10', 'nottingham')], max_length=20)),
                ('postal_code', models.CharField(max_length=10)),
                ('lat', models.FloatField(blank=True)),
                ('lon', models.FloatField(blank=True)),
                ('content', tinymce.models.HTMLField()),
                ('image', models.FileField(upload_to='media')),
                ('year_built', models.CharField(blank=True, max_length=10)),
                ('embedded_link_youtube', models.CharField(blank=True, max_length=100)),
                ('pub_date', models.DateField(default=datetime.datetime(2023, 1, 23, 11, 42, 8, 4241))),
            ],
        ),
        migrations.CreateModel(
            name='PropertyCities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='PropertyTypeMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='StatusMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='TeamMembers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(upload_to='media/team')),
                ('name', models.CharField(blank=True, max_length=30)),
                ('role', models.CharField(blank=True, max_length=30)),
                ('desc', tinymce.models.HTMLField()),
                ('mobile', models.CharField(blank=True, max_length=15)),
                ('email', models.CharField(blank=True, max_length=40)),
                ('address', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='UserFavProperties',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_checked', models.BooleanField(default=False)),
                ('property', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='home.properties')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserExclusiveProperties',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='home.properties')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PropertyTypeMapper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='home.properties')),
                ('type', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='home.propertytypemaster')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyStatusMapper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='home.properties')),
                ('status', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='home.statusmaster')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyOffers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('is_automaically', models.BooleanField(default=False)),
                ('discount', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.discount')),
                ('property', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='home.properties')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.FileField(upload_to='media')),
                ('property', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='home.properties')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyFurnitureMapper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('furniture_type', models.CharField(choices=[('1', 'room'), ('2', 'bathrooms'), ('3', 'garage')], max_length=10)),
                ('furniture_counts', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='home.furnituremaster')),
                ('property', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='home.properties')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyFeatureMapper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='home.featuremaster')),
                ('property', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='home.properties')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fname', models.CharField(blank=True, max_length=20)),
                ('lname', models.CharField(blank=True, max_length=20)),
                ('email', models.CharField(blank=True, max_length=20)),
                ('mobile', models.CharField(blank=True, max_length=15)),
                ('city', models.CharField(blank=True, max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ConstructionUpdatesImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.FileField(upload_to='media/property_updates')),
                ('property_update_id', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='home.constructionupdates')),
            ],
        ),
        migrations.AddField(
            model_name='constructionupdates',
            name='property',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='home.properties'),
        ),
    ]
